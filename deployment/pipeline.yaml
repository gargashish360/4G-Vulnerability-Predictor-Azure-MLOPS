# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

stages:
- stage: Download
  pool:
    vmImage: ubuntu-latest

  jobs:
  - job: fetch_best_model_config
    steps:
    - script: echo Hello, world!
      displayName: 'Run a one-line script'

    - script: |
        echo Add other tasks to build, test, and deploy your project.
        echo See https://aka.ms/yaml
      displayName: 'Run a multi-line script'

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.9'
        addToPath: true
        architecture: 'x64'

    - script: pip install -r download/requirements.txt
      workingDirectory: deployment/
      displayName: 'Install deployment dependencies'

    - script: python download/download_best_model.py
      workingDirectory: deployment/
      displayName: Downloading artifacts from best model

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'deployment/best_model_artifacts'
        artifact: 'BestModelArtifacts'
        publishLocation: 'pipeline'

- stage: Train
  pool:
    vmImage: ubuntu-latest
  dependsOn:
  - Download
  jobs:
  - job: train_best_model
    
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'BestModelArtifacts'
        targetPath: 'deployment/best_model_artifacts'
    
    - script: |
        ls deployment/
      displayName: 'Debug'

    - script: pip install -r train/requirements.txt
      workingDirectory: deployment/
      displayName: 'Install deployment dependencies'
    
    - script: python train/train_best_model.py
      workingDirectory: deployment/
      displayName: Training model from best config

    - script: |
        ls deployment/
      displayName: 'Debug'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'deployment/best_model_artifacts/best_model.onnx'
        artifact: 'BestModelONNX'
        publishLocation: 'pipeline'

- stage: Deploy
  pool:
    vmImage: ubuntu-latest
  dependsOn:
  - Train
  jobs:
  - job: deploy_onnx_model
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'BestModelONNX'
        targetPath: 'deployment/best_model_artifacts/'
    
    - script: |
        ls deployment/best_model_artifacts
      displayName: 'Debug'
    
    - script: pip install -r deploy/requirements.txt
      workingDirectory: deployment/
      displayName: 'Install deployment dependencies'
    
    - script: python deploy/deploy_onnx.py
      workingDirectory: deployment/
      displayName: Deploying ONNX model to endpoint

  
  
  
